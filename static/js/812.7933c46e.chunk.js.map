{"version":3,"file":"static/js/812.7933c46e.chunk.js","mappings":"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","sources":["components/Footer/Footer.js","components/Header/Header.js","components/PaginationShowEntries/PaginationShowEntries.js","components/PaginationNumbreEntries/PaginationNumbreEntries.js","components/PaginationShowPage/PaginationShowPage.js","components/Search/Search.js","components/Table/Table.js","pages/CurrentEmployees/CurrentEmployees.js"],"sourcesContent":["import React from 'react'\r\nimport '../Footer/Footer.css'\r\n\r\n/**\r\n * Component React which displays the footer of the app\r\n * @component\r\n */\r\n\r\nconst FooterApp = () => {    \r\n    return (\r\n        <footer className='footer'>\r\n            <p>@ Copyright 2023</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default FooterApp","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport logo from '../../assets/logo.jpg'\r\nimport '../Header/Header.css'\r\n\r\n/**\r\n * Component React which displays the header of the app\r\n * @component\r\n */\r\n\r\nconst HeaderApp = () => {    \r\n    return (\r\n        <header className='header'>\r\n                <Link className=\"logo\" to=\"/\" >\r\n                    <img src={logo} alt=\"Wealth Health logo\" />\r\n                </Link>                          \r\n                <h1>HRnet</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderApp","import React from 'react'\r\n\r\nimport '../PaginationShowEntries/PaginationShowEntries.css'\r\n\r\n/**\r\n * Component React that defines the number bar of page's entries rows\r\n * @param {setPageSize} function Set number of entries\r\n * @param {pageSize} Number Number of entries by page\r\n * @returns The number bar of page's entries rows\r\n */\r\n\r\nfunction PaginationShowEntries({setPageSize, pageSize}) {\r\n    return (\r\n      <>      \r\n        <div className=\"paginationShowEntries\">\r\n            <p>Show</p>\r\n            <select\r\n            className='pageNumber'\r\n                value={pageSize}\r\n                onChange={e => {\r\n                setPageSize(Number(e.target.value))\r\n                }}\r\n            >\r\n                {[10, 25, 50, 100].map(pageSize => (\r\n                <option  key={pageSize} value={pageSize}>\r\n                    {pageSize}\r\n                </option>\r\n                ))}\r\n            </select>\r\n            <p>entries</p>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default PaginationShowEntries","import React from 'react'\r\n\r\nimport '../PaginationNumbreEntries/PaginationNumbreEntries.css'\r\n\r\n/**\r\n * Component React which displays the number of entries' pagination in the current employees' table\r\n * @param {preGlobalFilteredRows} param0 \r\n * @param {postGlobalFilteredRows}\r\n * @param {pageIndex}\r\n * @param {pageSize}\r\n * @returns The number of entries' pagination in the current employees' table\r\n */\r\n\r\nfunction PaginationNumbreEntries({ preGlobalFilteredRows, postGlobalFilteredRows, pageIndex, pageSize }) {\r\n  const start =  postGlobalFilteredRows.length > 0 ? ( pageIndex  * pageSize ) + 1 : 0\r\n  const end = ( postGlobalFilteredRows.length < start + pageSize - 1 ) ? postGlobalFilteredRows.length : start + pageSize - 1\r\n  \r\n  // Render the UI for the table\r\n  return (\r\n    <>\r\n      <div className=\"paginationNumbreEntries\">        \r\n        Showing {start} to {end} of {postGlobalFilteredRows.length} entries  \r\n        { postGlobalFilteredRows.length !== preGlobalFilteredRows.length  &&\r\n         <p className='filteredFrom'>(filtered from {preGlobalFilteredRows.length} total entries)</p>\r\n       }\r\n\r\n        \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PaginationNumbreEntries","import React from 'react'\r\n\r\nimport '../PaginationShowPage/PaginationShowPage.css'\r\n\r\n/**\r\n * Component of React which displays the 'previous' and 'next' button' in the current employees' table\r\n * @param {canPreviousPage} \r\n * @param {canNextPage}\r\n * @param {nextPage}\r\n * @param {previousPage}\r\n * @param {pageIndex}\r\n * @returns \r\n */\r\n\r\nfunction PaginationShowPage({ canPreviousPage, canNextPage, nextPage, previousPage, pageIndex }) {\r\n  // Render the UI for the table\r\n  return (\r\n    <>\r\n      <div className=\"paginationShowPage\">        \r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'Previous'}\r\n        </button>{' '}\r\n        <span className='page'>\r\n          <strong>\r\n            {pageIndex + 1}\r\n          </strong>{' '}\r\n        </span>\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'Next'}\r\n        </button>{' '}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PaginationShowPage","import React from 'react'\r\nimport { useAsyncDebounce } from 'react-table'\r\n\r\nimport '../Search/Search.css'\r\n\r\n/**\r\n * Component React that define a default UI for filtering\r\n * @param {globalFilter} \r\n * @param {setGlobalFilter}\r\n * @returns A default UI for filtering the current employees datas\r\n */\r\n\r\nfunction Search ({ preGlobalFilteredRows, globalFilter, setGlobalFilter }) {\r\n    const [value, setValue] = React.useState(globalFilter)\r\n    const onChange = useAsyncDebounce(value => {\r\n      setGlobalFilter(value || undefined)\r\n    }, 200)\r\n  \r\n    return (\r\n      <div className='searchSection'>\r\n        <form className='inputClass'>\r\n            <label className='searchLabel'>Search:</label>\r\n            <input className='searchInput' aria-label='Search' value={value || \"\"}\r\n                onChange={e => { setValue(e.target.value);\r\n                                onChange(e.target.value);}} \r\n                placeholder={``}\r\n            style={{ fontSize: '1.1rem'}}\r\n            />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Search","import React from 'react'\r\nimport { useTable, useSortBy, useGlobalFilter, usePagination } from 'react-table'\r\nimport { BsChevronBarDown, BsChevronBarUp, BsChevronBarExpand } from 'react-icons/bs'\r\n\r\nimport PaginationShowEntries from '../PaginationShowEntries/PaginationShowEntries'\r\nimport PaginationNumbreEntries from '../PaginationNumbreEntries/PaginationNumbreEntries'\r\nimport PaginationShowPage from '../PaginationShowPage/PaginationShowPage'\r\nimport Search from '../Search/Search'\r\n\r\n//import { employeesData } from '../../datas/employeesData'\r\n\r\nimport '../Table/Table.css'\r\n\r\n/**\r\n * Component React that define the table of employees datas\r\n * @returns The employees datas table\r\n */\r\n\r\nconst TableEmployees = ({employees}) => {\r\n\r\n    const columns = React.useMemo(() =>[\r\n        { Header: 'First Name', accessor: 'firstName' },\r\n        { Header: 'Last Name', accessor: 'lastName' },\r\n        { Header: 'Start Date', accessor: 'startDate' },\r\n        { Header: 'Department', accessor: 'departement' },\r\n        { Header: 'Date of Birth', accessor: 'birthDate' },\r\n        { Header: 'Street', accessor: 'street' },\r\n        { Header: 'City', accessor: 'city' },\r\n        { Header: 'State', accessor: 'state' },\r\n        { Header: 'Zip Code', accessor: 'zipCode' },\r\n    ], [] )\r\n\r\n    // Mock \r\n    //const data = React.useMemo(() => employeesData, []\r\n    //)  \r\n    // console.table(employees)\r\n    // console.table(employeesData)\r\n\r\n    const data = React.useMemo(() => employees, [employees]\r\n    )\r\n\r\n    const tableInstance = useTable({ columns, data }, useGlobalFilter, useSortBy, usePagination )\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        preGlobalFilteredRows,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        setGlobalFilter,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        setPageSize,\r\n        canPreviousPage, \r\n        canNextPage, \r\n        nextPage, \r\n        previousPage, \r\n        page\r\n      } = tableInstance\r\n\r\n    // We don't want to render all 2000 rows, \r\n    // so cap it at 20 for this use case\r\n    //const firstPageRows = rows.slice(0, 10)\r\n    \r\n    console.log('page:' + page.length)\r\n\r\n    return (\r\n        <div className='tableEmployeesSection'>\r\n            <div className='tableEmployees'>\r\n                <div className='searchLine'>\r\n                    <PaginationShowEntries setPageSize={setPageSize} pageSize={pageSize}/>\r\n                    <Search\r\n                        preGlobalFilteredRows={preGlobalFilteredRows}\r\n                        globalFilter={globalFilter}\r\n                        setGlobalFilter={setGlobalFilter} />\r\n                </div>                \r\n\r\n                <table className='tableSection' {...getTableProps()}>\r\n                    <thead className='dataHeader'>\r\n                        {// Loop over the header rows\r\n                        headerGroups.map(headerGroup => (\r\n                            // Apply the header row props\r\n                            <tr className='headerGroup' {...headerGroup.getHeaderGroupProps()}>\r\n\r\n                            {// Loop over the headers in each row\r\n                            headerGroup.headers.map(column => (\r\n                                \r\n                                // Apply the header cell props\r\n                                <th className='headerList' {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    <div>\r\n                                        {// Render the header\r\n                                        column.render('Header')}\r\n                                    </div>\r\n                                    {/* Add a sort direction indicator */}\r\n                                    <span className='iconArrow'>                                        \r\n                                        {column.isSorted\r\n                                        ? column.isSortedDesc\r\n                                            ? <BsChevronBarDown/>\r\n                                            : <BsChevronBarUp/>\r\n                                        : <BsChevronBarExpand/>}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                            </tr>\r\n                        ))}\r\n                    </thead>\r\n\r\n                    {/* Apply the table body props */}\r\n                        \r\n                    <tbody className='dataBody' {...getTableBodyProps()}>  \r\n                                            \r\n                        {page.length === 0 && \r\n                            <tr>\r\n                                <td colSpan={9} className='noDataText'>No data available in table</td>\r\n                            </tr>}       \r\n\r\n                        {page.length > 0 && page.map(                             // Loop over the table rows\r\n                            (row, i) => {\r\n                            prepareRow(row)                             // Prepare the row for display            \r\n                            return (\r\n                                // Apply the row props\r\n                                <tr className='dataGroup'{...row.getRowProps()}>                                        \r\n                                    {row.cells.map(cell => {            // Loop over the rows cells\r\n                                        // Apply the cell props\r\n                                        return (\r\n                                        <td className='dataList' {...cell.getCellProps()}>                                                \r\n                                            {cell.render('Cell')}       \r\n                                        </td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )}\r\n                        )}\r\n       \r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className='pageLine'>\r\n                    <PaginationNumbreEntries preGlobalFilteredRows={preGlobalFilteredRows} postGlobalFilteredRows={rows} pageIndex={ pageIndex } pageSize={pageSize}/>\r\n                    <PaginationShowPage canPreviousPage={ canPreviousPage } \r\n                            canNextPage={ canNextPage } nextPage={ nextPage } \r\n                            previousPage={ previousPage } pageIndex={ pageIndex }/>\r\n                    \r\n                </div>   \r\n            </div>\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default TableEmployees","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport HeaderApp from '../../components/Header/Header'\r\nimport Table from '../../components/Table/Table'\r\nimport FooterApp from '../../components/Footer/Footer'\r\n// import { data } from '../../datas/employeesData'\r\n\r\nimport '../CurrentEmployees/CurrentEmployees.css'\r\n\r\n/**\r\n * Component React which display the page of current employees datas list\r\n * @component\r\n * @returns The page of current employees datas list\r\n */\r\n\r\nconst CurrentEmployees = () => {   \r\n\r\n    const employees = useSelector(state => state.employeeReducer.employees)\r\n    //console.log('employees:' + employees)\r\n\r\n    return (\r\n        <div className='currentEmployeesSection'>\r\n            <HeaderApp/> \r\n            <div className='currentEmployeesBody'>\r\n                <Table className='tableEmployee' employees={employees}/>\r\n                <Link className=\"homeLink\" to='/'>\r\n                    Home\r\n                </Link>\r\n            </div>  \r\n            <FooterApp className='footerCurrent' />\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default CurrentEmployees"],"names":["_jsx","className","children","_jsxs","Link","to","src","alt","_ref","setPageSize","pageSize","_Fragment","value","onChange","e","Number","target","map","preGlobalFilteredRows","postGlobalFilteredRows","pageIndex","start","length","end","canPreviousPage","canNextPage","nextPage","previousPage","onClick","disabled","globalFilter","setGlobalFilter","_React$useState","React","_React$useState2","_slicedToArray","setValue","useAsyncDebounce","undefined","placeholder","style","fontSize","employees","columns","Header","accessor","data","tableInstance","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","_tableInstance$state","state","headerGroups","rows","prepareRow","page","console","log","PaginationShowEntries","Search","_objectSpread","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","BsChevronBarDown","BsChevronBarUp","BsChevronBarExpand","colSpan","row","i","getRowProps","cells","cell","getCellProps","PaginationNumbreEntries","PaginationShowPage","useSelector","employeeReducer","HeaderApp","Table","FooterApp"],"sourceRoot":""}